{"ast":null,"code":"import axios from 'axios';\nconst services = {\n  hotel: 'http://localhost:5001',\n  auth: 'http://localhost:5002',\n  reservation: 'http://localhost:5003',\n  notification: 'http://localhost:5004'\n};\nconst api = {\n  // Hotel Service\n  getRooms: () => axios.get(`${services.hotel}/api/rooms`),\n  getRoom: id => axios.get(`${services.hotel}/api/rooms/${id}`),\n  createRoom: async roomData => {\n    try {\n      const response = await axios.post(`${services.hotel}/api/rooms`, {\n        room_type: roomData.room_type,\n        price: parseFloat(roomData.price),\n        room_number: `R${String(roomData.total_rooms).padStart(3, '0')}`,\n        total_rooms: parseInt(roomData.total_rooms),\n        available_rooms: parseInt(roomData.available_rooms)\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Gagal menambahkan kamar';\n    }\n  },\n  deleteRoom: id => axios.delete(`${services.hotel}/api/rooms/${id}`),\n  updateRoom: async (id, roomData) => {\n    try {\n      const response = await axios.put(`${services.hotel}/api/rooms/${id}`, {\n        room_type: roomData.room_type,\n        price: parseFloat(roomData.price),\n        total_rooms: parseInt(roomData.total_rooms),\n        available_rooms: parseInt(roomData.available_rooms)\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Gagal memperbarui kamar';\n    }\n  },\n  // Reservation Service\n  createBooking: data => axios.post(`${services.reservation}/api/bookings`, data),\n  getBookings: () => {\n    return axios.get(`${services.reservation}/api/bookings`);\n  },\n  // Auth Service\n  login: credentials => axios.post(`${services.auth}/api/auth/login`, credentials),\n  logout: () => axios.post(`${services.auth}/api/auth/logout`),\n  // Notification Service\n  sendNotification: data => axios.post(`${services.notification}/api/notifications`, data)\n};\nexport default api;","map":{"version":3,"names":["axios","services","hotel","auth","reservation","notification","api","getRooms","get","getRoom","id","createRoom","roomData","response","post","room_type","price","parseFloat","room_number","String","total_rooms","padStart","parseInt","available_rooms","data","error","_error$response","_error$response$data","deleteRoom","delete","updateRoom","put","_error$response2","_error$response2$data","createBooking","getBookings","login","credentials","logout","sendNotification"],"sources":["C:/Users/USER/Documents/Collage/SEM 6/CC/Reservation_Project/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst services = {\n  hotel: 'http://localhost:5001',\n  auth: 'http://localhost:5002',\n  reservation: 'http://localhost:5003',\n  notification: 'http://localhost:5004'\n};\n\nconst api = {\n  // Hotel Service\n  getRooms: () => axios.get(`${services.hotel}/api/rooms`),\n  getRoom: (id) => axios.get(`${services.hotel}/api/rooms/${id}`),\n  createRoom: async (roomData) => {\n    try {\n      const response = await axios.post(`${services.hotel}/api/rooms`, {\n        room_type: roomData.room_type,\n        price: parseFloat(roomData.price),\n        room_number: `R${String(roomData.total_rooms).padStart(3, '0')}`,\n        total_rooms: parseInt(roomData.total_rooms),\n        available_rooms: parseInt(roomData.available_rooms)\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response?.data?.error || 'Gagal menambahkan kamar';\n    }\n  },\n  deleteRoom: (id) => axios.delete(`${services.hotel}/api/rooms/${id}`),\n  updateRoom: async (id, roomData) => {\n    try {\n      const response = await axios.put(`${services.hotel}/api/rooms/${id}`, {\n        room_type: roomData.room_type,\n        price: parseFloat(roomData.price),\n        total_rooms: parseInt(roomData.total_rooms),\n        available_rooms: parseInt(roomData.available_rooms)\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response?.data?.error || 'Gagal memperbarui kamar';\n    }\n  },\n  \n  // Reservation Service\n  createBooking: (data) => axios.post(`${services.reservation}/api/bookings`, data),\n  getBookings: () => {\n    return axios.get(`${services.reservation}/api/bookings`);\n  },\n  \n  // Auth Service\n  login: (credentials) => axios.post(`${services.auth}/api/auth/login`, credentials),\n  logout: () => axios.post(`${services.auth}/api/auth/logout`),\n  \n  // Notification Service\n  sendNotification: (data) => axios.post(`${services.notification}/api/notifications`, data)\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}