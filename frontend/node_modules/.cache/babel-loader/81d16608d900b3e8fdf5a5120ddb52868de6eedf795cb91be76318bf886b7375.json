{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Collage\\\\SEM 6\\\\CC\\\\Reservation_Project\\\\frontend\\\\src\\\\pages\\\\Admin\\\\Notifications.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Container, Typography, List, ListItem, ListItemText, ListItemIcon, Paper, Divider } from '@mui/material';\nimport { Notifications as NotificationsIcon } from '@mui/icons-material';\nimport AdminSidebar from '../../components/shared/AdminSidebar';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notifications() {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    fetchNotifications();\n  }, []);\n  const fetchNotifications = async () => {\n    try {\n      // Implementasi nanti setelah API notifikasi tersedia\n      setNotifications([]);\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AdminSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        p: 3,\n        bgcolor: '#f5f5f5',\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        sx: {\n          mt: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          sx: {\n            mb: 4,\n            fontWeight: 'bold',\n            color: '#1976d2'\n          },\n          children: \"Notifikasi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            boxShadow: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(List, {\n            children: notifications.length === 0 ? /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"Tidak ada notifikasi\",\n                sx: {\n                  textAlign: 'center',\n                  color: '#666'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this) : notifications.map((notification, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: notification.message,\n                  secondary: new Date(notification.createdAt).toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this), index < notifications.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 58\n              }, this)]\n            }, notification.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Notifications, \"6gMUc0OfbF4zJu51/S5RmKCczuA=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useState","useEffect","Box","Container","Typography","List","ListItem","ListItemText","ListItemIcon","Paper","Divider","Notifications","NotificationsIcon","AdminSidebar","api","jsxDEV","_jsxDEV","_s","notifications","setNotifications","fetchNotifications","error","console","sx","display","children","fileName","_jsxFileName","lineNumber","columnNumber","component","flexGrow","p","bgcolor","minHeight","maxWidth","mt","variant","mb","fontWeight","color","boxShadow","length","primary","textAlign","map","notification","index","Fragment","message","secondary","Date","createdAt","toLocaleString","id","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/Collage/SEM 6/CC/Reservation_Project/frontend/src/pages/Admin/Notifications.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { \n  Box, \n  Container, \n  Typography, \n  List, \n  ListItem, \n  ListItemText, \n  ListItemIcon,\n  Paper,\n  Divider\n} from '@mui/material';\nimport { Notifications as NotificationsIcon } from '@mui/icons-material';\nimport AdminSidebar from '../../components/shared/AdminSidebar';\nimport api from '../../services/api';\n\nfunction Notifications() {\n  const [notifications, setNotifications] = useState([]);\n\n  useEffect(() => {\n    fetchNotifications();\n  }, []);\n\n  const fetchNotifications = async () => {\n    try {\n      // Implementasi nanti setelah API notifikasi tersedia\n      setNotifications([]);\n    } catch (error) {\n      console.error('Error fetching notifications:', error);\n    }\n  };\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <AdminSidebar />\n      <Box component=\"main\" sx={{ flexGrow: 1, p: 3, bgcolor: '#f5f5f5', minHeight: '100vh' }}>\n        <Container maxWidth=\"lg\" sx={{ mt: 4 }}>\n          <Typography variant=\"h4\" sx={{ mb: 4, fontWeight: 'bold', color: '#1976d2' }}>\n            Notifikasi\n          </Typography>\n          \n          <Paper sx={{ boxShadow: 3 }}>\n            <List>\n              {notifications.length === 0 ? (\n                <ListItem>\n                  <ListItemText \n                    primary=\"Tidak ada notifikasi\"\n                    sx={{ textAlign: 'center', color: '#666' }}\n                  />\n                </ListItem>\n              ) : (\n                notifications.map((notification, index) => (\n                  <React.Fragment key={notification.id}>\n                    <ListItem>\n                      <ListItemIcon>\n                        <NotificationsIcon color=\"primary\" />\n                      </ListItemIcon>\n                      <ListItemText \n                        primary={notification.message}\n                        secondary={new Date(notification.createdAt).toLocaleString()}\n                      />\n                    </ListItem>\n                    {index < notifications.length - 1 && <Divider />}\n                  </React.Fragment>\n                ))\n              )}\n            </List>\n          </Paper>\n        </Container>\n      </Box>\n    </Box>\n  );\n}\n\nexport default Notifications;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}