{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Collage\\\\SEM 6\\\\CC\\\\Reservation_Project\\\\frontend\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const login = async credentials => {\n    try {\n      const response = await api.login(credentials);\n      const data = response.data;\n      if (data.user_id && data.role) {\n        setUser({\n          id: data.user_id,\n          role: data.role\n        });\n        setIsAuthenticated(true);\n        return {\n          success: true\n        };\n      } else {\n        return {\n          success: false,\n          error: 'Invalid response from server'\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed'\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      await api.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"mbKa3mHmiYR6ypr2drLsAAm+MEk=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","login","credentials","response","data","user_id","role","id","success","error","_error$response","_error$response$data","logout","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/USER/Documents/Collage/SEM 6/CC/Reservation_Project/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import { createContext, useContext, useState } from 'react';\nimport api from '../services/api';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [user, setUser] = useState(null);\n\n    const login = async (credentials) => {\n        try {\n            const response = await api.login(credentials);\n            const data = response.data;\n            \n            if (data.user_id && data.role) {\n                setUser({\n                    id: data.user_id,\n                    role: data.role\n                });\n                setIsAuthenticated(true);\n                return { success: true };\n            } else {\n                return { \n                    success: false, \n                    error: 'Invalid response from server' \n                };\n            }\n        } catch (error) {\n            return { \n                success: false, \n                error: error.response?.data?.error || 'Login failed' \n            };\n        }\n    };\n\n    const logout = async () => {\n        try {\n            await api.logout();\n        } catch (error) {\n            console.error('Logout error:', error);\n        } finally {\n            setUser(null);\n            setIsAuthenticated(false);\n        }\n    };\n\n    return (\n        <AuthContext.Provider value={{ \n            isAuthenticated, \n            user, \n            login, \n            logout \n        }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    const context = useContext(AuthContext);\n    if (!context) {\n        throw new Error('useAuth must be used within an AuthProvider');\n    }\n    return context;\n};"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,gBAAGN,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMY,KAAK,GAAG,MAAOC,WAAW,IAAK;IACjC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMb,GAAG,CAACW,KAAK,CAACC,WAAW,CAAC;MAC7C,MAAME,IAAI,GAAGD,QAAQ,CAACC,IAAI;MAE1B,IAAIA,IAAI,CAACC,OAAO,IAAID,IAAI,CAACE,IAAI,EAAE;QAC3BN,OAAO,CAAC;UACJO,EAAE,EAAEH,IAAI,CAACC,OAAO;UAChBC,IAAI,EAAEF,IAAI,CAACE;QACf,CAAC,CAAC;QACFR,kBAAkB,CAAC,IAAI,CAAC;QACxB,OAAO;UAAEU,OAAO,EAAE;QAAK,CAAC;MAC5B,CAAC,MAAM;QACH,OAAO;UACHA,OAAO,EAAE,KAAK;UACdC,KAAK,EAAE;QACX,CAAC;MACL;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACZ,OAAO;QACHH,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACN,QAAQ,cAAAO,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBN,IAAI,cAAAO,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI;MAC1C,CAAC;IACL;EACJ,CAAC;EAED,MAAMG,MAAM,GAAG,MAAAA,CAAA,KAAY;IACvB,IAAI;MACA,MAAMtB,GAAG,CAACsB,MAAM,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACZI,OAAO,CAACJ,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACzC,CAAC,SAAS;MACNT,OAAO,CAAC,IAAI,CAAC;MACbF,kBAAkB,CAAC,KAAK,CAAC;IAC7B;EACJ,CAAC;EAED,oBACIN,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MACzBlB,eAAe;MACfE,IAAI;MACJE,KAAK;MACLW;IACJ,CAAE;IAAAjB,QAAA,EACGA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACvB,EAAA,CAnDWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAqDzB,OAAO,MAAM2B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAGnC,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAAC8B,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAClE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}