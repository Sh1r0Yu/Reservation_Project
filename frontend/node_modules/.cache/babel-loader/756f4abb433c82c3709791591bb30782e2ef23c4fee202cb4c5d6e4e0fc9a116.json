{"ast":null,"code":"import axios from'axios';const services={hotel:'http://localhost:5001',auth:'http://localhost:5002',reservation:'http://localhost:5003',notification:'http://localhost:5004'};const api={// Hotel Service\ngetRooms:()=>axios.get(`${services.hotel}/api/rooms`),getRoom:id=>axios.get(`${services.hotel}/api/rooms/${id}`),createRoom:async roomData=>{try{const response=await axios.post(`${services.hotel}/api/rooms`,{room_type:roomData.room_type,price:parseFloat(roomData.price),room_number:`R${String(roomData.total_rooms).padStart(3,'0')}`,total_rooms:parseInt(roomData.total_rooms),available_rooms:parseInt(roomData.available_rooms)});return response.data;}catch(error){var _error$response,_error$response$data;throw((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Gagal menambahkan kamar';}},deleteRoom:id=>axios.delete(`${services.hotel}/api/rooms/${id}`),updateRoom:async(id,roomData)=>{try{const response=await axios.put(`${services.hotel}/api/rooms/${id}`,{room_type:roomData.room_type,price:parseFloat(roomData.price),total_rooms:parseInt(roomData.total_rooms),available_rooms:parseInt(roomData.available_rooms)});return response.data;}catch(error){var _error$response2,_error$response2$data;throw((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Gagal memperbarui kamar';}},// Reservation Service\ncreateBooking:data=>axios.post(`${services.reservation}/api/bookings`,data),getBookings:()=>{return axios.get(`${services.reservation}/api/bookings`);},// Auth Service\nlogin:credentials=>axios.post(`${services.auth}/api/auth/login`,credentials),logout:()=>axios.post(`${services.auth}/api/auth/logout`),// Notification Service\nsendNotification:data=>axios.post(`${services.notification}/api/notifications`,data)};export default api;","map":{"version":3,"names":["axios","services","hotel","auth","reservation","notification","api","getRooms","get","getRoom","id","createRoom","roomData","response","post","room_type","price","parseFloat","room_number","String","total_rooms","padStart","parseInt","available_rooms","data","error","_error$response","_error$response$data","deleteRoom","delete","updateRoom","put","_error$response2","_error$response2$data","createBooking","getBookings","login","credentials","logout","sendNotification"],"sources":["C:/Users/USER/Documents/Collage/SEM 6/CC/Tugas/Reservation_Project/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst services = {\r\n  hotel: 'http://localhost:5001',\r\n  auth: 'http://localhost:5002',\r\n  reservation: 'http://localhost:5003',\r\n  notification: 'http://localhost:5004'\r\n};\r\n\r\nconst api = {\r\n  // Hotel Service\r\n  getRooms: () => axios.get(`${services.hotel}/api/rooms`),\r\n  getRoom: (id) => axios.get(`${services.hotel}/api/rooms/${id}`),\r\n  createRoom: async (roomData) => {\r\n    try {\r\n      const response = await axios.post(`${services.hotel}/api/rooms`, {\r\n        room_type: roomData.room_type,\r\n        price: parseFloat(roomData.price),\r\n        room_number: `R${String(roomData.total_rooms).padStart(3, '0')}`,\r\n        total_rooms: parseInt(roomData.total_rooms),\r\n        available_rooms: parseInt(roomData.available_rooms)\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data?.error || 'Gagal menambahkan kamar';\r\n    }\r\n  },\r\n  deleteRoom: (id) => axios.delete(`${services.hotel}/api/rooms/${id}`),\r\n  updateRoom: async (id, roomData) => {\r\n    try {\r\n      const response = await axios.put(`${services.hotel}/api/rooms/${id}`, {\r\n        room_type: roomData.room_type,\r\n        price: parseFloat(roomData.price),\r\n        total_rooms: parseInt(roomData.total_rooms),\r\n        available_rooms: parseInt(roomData.available_rooms)\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data?.error || 'Gagal memperbarui kamar';\r\n    }\r\n  },\r\n  \r\n  // Reservation Service\r\n  createBooking: (data) => axios.post(`${services.reservation}/api/bookings`, data),\r\n  getBookings: () => {\r\n    return axios.get(`${services.reservation}/api/bookings`);\r\n  },\r\n  \r\n  // Auth Service\r\n  login: (credentials) => axios.post(`${services.auth}/api/auth/login`, credentials),\r\n  logout: () => axios.post(`${services.auth}/api/auth/logout`),\r\n  \r\n  // Notification Service\r\n  sendNotification: (data) => axios.post(`${services.notification}/api/notifications`, data)\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}